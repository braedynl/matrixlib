Search.setIndex({"docnames": ["api-builtins", "api-rules", "best-practices", "changelog", "faq", "guide-access", "guide-construction", "guide-material-state", "guide-pattern-matching", "guide-prelude", "guide-rules", "guide-typing", "index"], "filenames": ["api-builtins.rst", "api-rules.rst", "best-practices.rst", "changelog.rst", "faq.rst", "guide-access.rst", "guide-construction.rst", "guide-material-state.rst", "guide-pattern-matching.rst", "guide-prelude.rst", "guide-rules.rst", "guide-typing.rst", "index.rst"], "titles": ["Built-ins", "Rules", "Best Practices", "Changelog", "FAQ", "Access", "Construction", "Material State", "Pattern Matching", "Prelude", "Rules", "Typing", "MatrixLib"], "terms": {"matrix": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "type": [0, 3, 5, 6, 7, 8, 9, 10, 12], "definit": [0, 10], "class": [0, 1, 2, 3, 4, 7, 8, 10, 11], "matrixlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "builtin": [0, 2, 3, 11], "arrai": [0, 3, 5, 8, 9, 10], "mesh": [0, 3, 7], "m_co": 0, "n_co": 0, "t_co": [0, 4], "collect": [0, 4, 12], "abc": [0, 3, 12], "iter": [0, 2, 5, 6, 7, 9, 10, 11, 12], "shape": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12], "liter": [0, 1, 2, 3, 11, 12], "rule": [0, 4], "row": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12], "0": [0, 1, 5, 6, 10, 11, 12], "col": [0, 1, 2, 3, 4, 5, 10, 11], "1": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "tupl": [0, 2, 3, 4, 5], "A": [0, 2, 4, 7, 8, 10], "hybrid": [0, 7], "one": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10], "two": [0, 1, 4, 6, 7, 9, 10], "rank": [0, 4, 7], "immut": 0, "sequenc": [0, 1, 4, 5, 6, 7, 8, 9, 10], "implement": [0, 2, 4, 5, 7, 9, 10, 12], "interfac": [0, 4, 7, 9], "alongsid": 0, "dimension": [0, 4, 6, 9, 10], "transform": 0, "access": [0, 3, 4, 6, 7, 10], "abil": [0, 8, 11], "provid": [0, 4, 7, 8, 10, 11], "onli": [0, 2, 3, 6, 7, 10, 11], "few": [0, 5], "vector": [0, 10], "oper": [0, 7, 9, 11], "ar": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "usabl": 0, "object": [0, 3, 4, 5, 6, 7], "ani": [0, 1, 2, 3, 4, 10], "__init__": [0, 3, 4], "none": 0, "construct": [0, 2, 3, 4, 7, 10, 11], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "anoth": [0, 6, 7], "instanc": [0, 2, 4, 7, 8, 9], "If": [0, 2, 4, 5, 7, 9, 10, 11], "i": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "interpret": [0, 1, 5, 6, 10], "either": 0, "column": [0, 1, 2, 5, 9, 10], "depend": [0, 2, 7], "given": [0, 4, 5], "member": [0, 1, 4, 10], "rais": [0, 6], "valueerror": [0, 6], "": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11], "valu": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11], "neg": [0, 6, 11], "product": [0, 6, 11], "doe": [0, 4, 6, 7, 9, 10], "equal": [0, 2, 6, 7, 11], "length": [0, 5, 6, 10, 11], "debug": [0, 11], "what": [0, 5, 7, 11], "we": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11], "call": [0, 4, 5, 7], "cast": [0, 4], "constant": 0, "time": [0, 2, 3, 4, 5, 6, 7, 11], "some": [0, 2, 4, 5, 7, 9, 10, 11], "usual": [0, 4, 10], "well": [0, 4, 5, 7], "can": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11], "vari": [0, 2], "its": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "materi": [0, 3, 4], "state": [0, 4], "thi": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "also": [0, 2, 4, 5, 6, 8], "how": [0, 2, 5, 7], "matric": [0, 2, 3, 5, 6, 7, 9, 11, 12], "re": [0, 7, 8, 10], "__repr__": [0, 3], "str": [0, 4], "return": [0, 1, 2, 3, 5, 11, 12], "canon": 0, "represent": [0, 6], "__str__": 0, "string": [0, 3], "__eq__": 0, "other": [0, 2, 5, 7, 9, 11], "bool": 0, "true": [0, 5], "otherwis": [0, 11], "fals": 0, "__hash__": 0, "int": [0, 2, 3, 4, 11, 12], "hash": 0, "hashabl": [0, 4], "__len__": [0, 3], "size": [0, 2], "__getitem__": [0, 4, 5, 11], "kei": [0, 4], "slice": [0, 2, 3, 4, 5, 7, 11, 12], "sub": [0, 1, 2, 3, 4, 7], "correspond": [0, 1, 10], "__iter__": [0, 4, 5], "over": [0, 2, 4, 5], "major": [0, 5], "order": [0, 4, 5, 8, 11], "__reversed__": [0, 4, 5], "revers": [0, 2, 4, 5, 7], "__contains__": 0, "contain": [0, 11], "final": [0, 1, 2], "__deepcopy__": 0, "memo": 0, "self": 0, "__copy__": 0, "properti": [0, 1, 4], "The": [0, 1, 2, 3, 5, 6, 7, 9, 10, 11, 12], "underli": [0, 5], "align": [0, 5, 8], "minimum": 0, "have": [0, 2, 3, 4, 5, 6, 7, 10, 11], "make": [0, 1, 2, 4, 5, 7, 12], "guarante": [0, 4, 7], "concret": [0, 7], "varieti": 0, "intern": [0, 6, 7, 9], "condit": [0, 7], "number": [0, 2, 3, 4, 7, 10], "nrow": [0, 11], "ncol": [0, 11], "classmethod": 0, "from_nest": [0, 2, 4, 6, 7], "nest": 0, "singli": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "shallowest": 0, "deduc": 0, "inconsist": 0, "index": [0, 1, 5], "start": 0, "stop": 0, "first": [0, 3, 4, 6], "where": [0, 2, 5, 6, 7, 9, 10, 11], "appear": [0, 4], "present": 0, "count": [0, 4], "copi": [0, 4, 5], "certain": [0, 4, 7], "method": [0, 2, 4, 5, 6, 7, 10, 11], "particularli": [0, 4, 10], "those": [0, 2, 3, 5, 7, 9, 11], "permut": [0, 4, 7], "fashion": [0, 5, 10], "view": [0, 4, 7], "onto": [0, 7], "preserv": [0, 4], "memori": [0, 4, 5, 7, 9], "These": [0, 3], "stack": [0, 4, 7], "which": [0, 4, 5, 7, 10], "drastic": 0, "increas": 0, "address": 0, "said": [0, 4], "issu": 0, "shallowli": 0, "place": [0, 7, 10], "element": [0, 1, 2, 3, 4, 7, 9, 10], "new": [0, 4, 7], "process": 0, "result": [0, 4], "ident": [0, 4, 7], "creat": [0, 7], "pair": [0, 6, 7], "note": [0, 2, 3, 4, 5, 11], "mai": [0, 2, 3, 7, 8, 9, 12], "consum": 0, "signific": [0, 11], "amount": [0, 4], "store": [0, 3, 4, 6, 7], "kind": [0, 2, 4, 7], "semant": [0, 8], "equival": [0, 1, 5], "origin": [0, 3], "thei": [0, 2, 4, 5, 7, 10, 11], "whose": [0, 6, 8], "alreadi": [0, 2, 6], "exist": [0, 3, 4, 5, 6, 10], "desir": [0, 4], "think": [0, 4, 9], "being": [0, 4, 5, 9, 10, 12], "akin": 0, "compil": [0, 4, 11], "regular": 0, "express": [0, 4], "same": [0, 2, 3, 4, 7], "requir": [0, 2, 4, 5, 10, 12], "mani": [0, 1, 2, 5, 9, 10], "differ": [0, 7, 10], "much": [0, 2, 4, 5, 6, 7, 11], "more": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12], "effici": 0, "substitut": 0, "variabl": [0, 2, 4, 8], "transpos": [0, 4, 7], "flip": [0, 4, 7, 10], "rotat": [0, 3, 4, 7], "n": [0, 2, 5, 6, 9, 11], "16": [0, 3], "14": 0, "12": [0, 4], "10": [0, 8], "8": [0, 2, 6, 12], "6": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "4": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "2": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "15": [0, 2], "13": 0, "11": [0, 4, 12], "9": [0, 2, 6, 11, 12], "7": [0, 2, 6, 12], "5": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "3": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12], "increment": 0, "90": 0, "degre": 0, "counter": 0, "clockwis": 0, "posit": 0, "all": [0, 3, 4, 5, 6, 7, 9, 11, 12], "integ": [0, 3, 5, 10], "accept": [0, 3, 4, 9, 10], "outsid": 0, "small": 0, "rang": [0, 2, 5, 8, 10, 11], "zero": 0, "lose": 0, "precis": 0, "dimens": [0, 1, 2, 5, 10], "format": 0, "field_width": 0, "write": [0, 5, 11], "field": [0, 8], "multi": 0, "line": [0, 3], "exce": 0, "truncat": 0, "last": [0, 4, 7], "charact": 0, "slot": 0, "purpos": [0, 4, 8, 12], "includ": [0, 4, 9], "ellipsi": 0, "u": [0, 7], "2026": 0, "signifi": 0, "width": 0, "must": [0, 2, 7, 8, 11], "larger": 0, "entireti": 0, "primarili": 0, "intend": 0, "interact": 0, "session": 0, "reli": 0, "serial": 0, "similar": [0, 2, 4, 5], "discourag": [0, 4], "chang": [0, 2, 3, 7, 12], "without": [0, 2, 9, 11], "regard": [0, 4, 7, 11], "backward": [0, 12], "compat": [0, 4, 12], "integermatrix": [0, 2, 3, 4, 7, 8, 12], "wise": [0, 1, 2, 4, 9, 10], "b": [0, 2, 4, 6, 7, 8, 10, 11, 12], "not_equ": 0, "complexmatrix": [0, 2, 4, 7, 11], "constrain": 0, "complex": [0, 2, 4, 7], "c_co": 0, "__add__": [0, 2, 4, 7, 11], "float": [0, 2, 4, 11, 12], "__sub__": 0, "__mul__": 0, "__matmul__": [0, 4], "p_co": 0, "__truediv__": 0, "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__neg__": 0, "__pos__": 0, "__abs__": 0, "realmatrix": [0, 2, 4, 7, 11, 12], "ab": 0, "conjug": [0, 4], "transjug": 0, "activ": 0, "__lt__": 0, "lexicograph": [0, 4], "__le__": 0, "__gt__": 0, "__ge__": 0, "r_co": 0, "__floordiv__": 0, "__mod__": [0, 7, 11], "__divmod__": 0, "divmod": 0, "__rfloordiv__": 0, "__rmod__": 0, "__rdivmod__": 0, "compar": [0, 4], "less": [0, 4, 5, 10, 11], "than": [0, 3, 5, 6, 7, 10], "greater": 0, "respect": [0, 2, 3, 4, 11], "second": [0, 2, 4], "lesser": 0, "lesser_equ": 0, "greater_equ": 0, "i_co": 0, "__lshift__": 0, "__rshift__": 0, "__and__": [0, 7], "__xor__": 0, "__or__": 0, "__rlshift__": 0, "__rrshift__": 0, "__rand__": 0, "__rxor__": 0, "__ror__": 0, "__invert__": [0, 1], "integralmatrix": [0, 3], "typealia": 0, "alia": [0, 3, 11], "enum": [1, 10], "alias": 1, "dictat": [1, 10], "each": [1, 10, 11], "map": [1, 10, 12], "retriev": [1, 5, 10], "should": [1, 4, 5], "function": [1, 2, 3, 4, 9, 10, 11], "assumpt": 1, "ha": [1, 2, 3, 4, 5, 7, 9, 11], "just": [1, 2, 4, 7, 10], "opposit": [1, 10], "handl": [1, 10], "un": [1, 2], "python": [1, 2, 4, 7, 8, 9, 11, 12], "name": [1, 2, 5, 9], "keep": [2, 9], "your": [2, 4, 11], "code": [2, 3], "clean": 2, "maintain": [2, 12], "choic": [2, 4], "alwai": [2, 4, 5, 12], "accomplish": [2, 5, 7], "specif": [2, 3, 11], "task": [2, 9], "fairli": 2, "common": [2, 4, 7], "librari": [2, 3, 4, 9, 10, 12], "tri": [2, 11], "extend": [2, 9], "capabl": [2, 5, 9, 12], "eventu": 2, "too": [2, 5, 9, 11], "maintan": 2, "defin": 2, "free": [2, 12], "stand": 2, "entir": [2, 11], "up": 2, "you": [2, 5, 6, 7, 8, 9, 10, 11], "tend": 2, "prefer": [2, 5, 10], "so": [2, 5, 7, 11], "For": [2, 4, 9, 11], "take": [2, 6, 9, 11], "input": [2, 6], "gener": [2, 5, 7, 12], "recommend": [2, 4, 6, 9, 12], "agnost": 2, "itself": [2, 3, 7], "standard": [2, 4], "sum": [2, 9, 11], "statist": 2, "mean": [2, 4, 6, 10], "inher": [2, 4], "written": [2, 4, 11], "wai": [2, 4, 5, 6, 7, 9], "argument": [2, 3, 8, 10, 11], "import": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], "21": [2, 9], "print": [2, 4, 5, 6, 8, 9, 10, 11, 12], "c": [2, 6, 7, 8, 10, 11], "sometim": [2, 4], "get": [2, 4, 9], "awai": 2, "pass": [2, 4, 5], "directli": [2, 5], "Be": 2, "sure": 2, "expressli": 2, "support": [2, 4, 8], "behavior": 2, "howev": [2, 3, 4, 6, 7, 9, 11], "unexpect": 2, "consequ": [2, 9], "thu": [2, 8], "subject": [2, 4, 7], "both": [2, 4, 7, 8, 11], "output": 2, "travers": 2, "layer": [2, 5], "depth": 2, "item": 2, "constructor": [2, 3, 4, 6, 8, 11], "avoid": [2, 4, 7], "clearli": 2, "notat": [2, 8], "d": [2, 5, 6, 10], "val": [2, 12], "e": [2, 10], "system": [2, 3, 5, 11], "rapidli": 2, "area": 2, "work": [2, 3, 5], "believ": [2, 4, 7], "api": [2, 3, 4, 5, 7, 9, 10, 11], "prepar": 2, "futur": [2, 3, 4, 7, 11, 12], "encourag": 2, "user": [2, 3, 4, 6, 10], "advantag": 2, "In": [2, 4, 5, 7, 11], "our": 2, "opinion": [2, 6], "orient": 2, "clearer": 2, "read": 2, "becaus": [2, 4, 7, 8], "describ": [2, 3, 4, 7, 8, 11], "ever": 2, "consult": 2, "document": [2, 3, 7, 11], "typevar": 2, "t": [2, 5, 6, 9, 10, 11], "m": [2, 11], "bound": [2, 4], "def": [2, 11, 12], "x": [2, 5, 9, 11, 12], "l": [2, 4, 11, 12], "1j": 2, "2j": 2, "3j": 2, "4j": 2, "5j": 2, "6j": 2, "reveal_typ": [2, 11], "reveal": [2, 11], "often": [2, 4, 5, 11], "fill": 2, "need": [2, 3, 4, 5, 7, 9, 11], "built": [2, 5, 9], "typic": [2, 4, 5, 11], "r": 2, "latter": [2, 4], "fallback": [2, 4], "complext": 2, "realt": 2, "integert": 2, "There": [2, 4, 5, 6, 7, 9, 10], "situat": 2, "know": [2, 4, 7, 10], "runtim": [2, 11], "g": [2, 10], "stream": 2, "data": [2, 4, 6], "network": 2, "while": [2, 4, 6, 8], "tempt": 2, "raw": [2, 4], "newtyp": 2, "instead": [2, 9, 10], "random": [2, 11], "unknown_s": 2, "randint": 2, "50": 2, "unknown": 2, "unknownn": 2, "hint": [2, 3], "_": [2, 11], "main": 2, "caus": [2, 7], "ensur": 2, "appli": [2, 4, 7], "binari": [2, 7], "like": [2, 3, 4, 5, 6, 7, 8, 11], "whenev": 2, "possibl": [2, 7, 11], "them": [2, 4], "let": [2, 11], "checker": [2, 11], "approv": 2, "paramet": 2, "exampl": [2, 4, 5, 6, 7, 8, 10], "problem": 2, "list": [3, 4, 8], "contributor": 3, "under": [3, 8, 12], "label": 3, "made": [3, 4, 8], "log": 3, "befor": [3, 7, 10], "could": [3, 4], "break": 3, "mark": 3, "ad": 3, "docstr": 3, "wa": [3, 4, 10], "unintent": 3, "omiss": 3, "show": 3, "resembl": [3, 8], "Its": 3, "remain": [3, 4], "modul": 3, "now": [3, 7], "annot": 3, "__future__": 3, "invok": [3, 8], "keyword": 3, "signatur": 3, "box": 3, "rather": [3, 10], "bring": 3, "still": [3, 4], "sole": 3, "prior": [3, 11], "want": [3, 5, 7, 8, 9, 11], "consist": 3, "integr": [3, 9, 12], "do": [3, 6, 7, 9, 11], "evennumb": 3, "oddnumb": 3, "cover": [3, 7], "top": 3, "level": [3, 4, 11], "been": [3, 4, 11], "renam": 3, "brand": 3, "reflect": 3, "across": [3, 9], "relev": 3, "github": 3, "pypi": [3, 4], "etc": [3, 7, 11], "longer": 3, "continu": [3, 4], "invoc": 3, "miscellan": 3, "expos": [3, 5], "though": [3, 5, 7, 8], "move": [3, 10], "within": [3, 7], "right": 3, "offici": 3, "frequent": 4, "ask": 4, "question": 4, "answer": 4, "simpli": 4, "ll": [4, 5, 6, 7, 9], "find": [4, 7], "when": [4, 6, 7, 8, 11], "flatten": [4, 5, 6, 9], "manner": [4, 5, 9, 11], "content": 4, "simul": 4, "higher": [4, 9], "truli": 4, "numpi": [4, 5, 9, 10], "tool": 4, "most": [4, 5, 11], "case": [4, 5, 6, 7, 8, 9], "mutat": 4, "necessari": 4, "after": 4, "perform": [4, 9], "join": 4, "concaten": 4, "o": [4, 7, 11], "hard": 4, "infer": [4, 6], "parallel": [4, 10], "ndarrai": [4, 9], "reshap": 4, "special": 4, "comparison": [4, 7], "summar": 4, "done": [4, 10], "non": [4, 7, 11], "variant": 4, "yield": 4, "unequ": 4, "expect": [4, 5, 10, 11], "short": [4, 7], "circuit": 4, "slow": [4, 7], "follow": [4, 7], "themselv": 4, "occur": 4, "combin": [4, 7], "larg": [4, 7], "come": [4, 10, 11], "cost": [4, 7], "insuffici": 4, "sacrific": [4, 7], "extra": 4, "manual": [4, 5], "produc": [4, 7, 11], "arithmet": [4, 7], "fast": [4, 5], "go": 4, "thin": 4, "wrapper": [4, 7], "aren": 4, "pretti": [4, 9], "quick": [4, 5], "sens": [4, 7], "realli": [4, 7], "easi": [4, 5], "updat": 4, "version": [4, 6, 7], "introduc": 4, "lazi": 4, "frame": 4, "inlin": 4, "greatli": 4, "benefit": [4, 6], "project": [4, 12], "altern": 4, "jit": 4, "It": [4, 9], "faster": [4, 5], "default": [4, 5, 9, 11], "even": [4, 5, 9, 11], "inclus": 4, "consid": [4, 7], "meant": 4, "easili": [4, 9], "yourself": [4, 7, 11], "look": [4, 8, 9], "see": [4, 6, 12], "current": [4, 5, 7, 12], "debat": 4, "revolv": 4, "around": 4, "namespac": 4, "alter": [4, 10], "experiment": 4, "thread": 4, "safe": 4, "sinc": [4, 5, 10, 11], "act": 4, "own": [4, 7], "give": [4, 5], "refer": [4, 7, 9, 11], "allow": [4, 6, 7], "dict": 4, "set": 4, "mutabl": 4, "dure": 4, "incom": 4, "build": 4, "later": [4, 5, 7, 11, 12], "routin": [4, 5], "via": [4, 7], "h": 4, "deliber": 4, "chose": 4, "goe": [4, 5], "against": 4, "convent": [4, 11], "contend": 4, "conjugate_transpos": 4, "hermitian_transpos": 4, "adjoint": 4, "argu": 4, "confus": 4, "adjug": 4, "classic": 4, "conflict": 4, "went": 4, "admittedli": 4, "obscur": [4, 8], "isn": 4, "terribli": 4, "better": [4, 5, 7], "concept": [4, 7, 10], "knowingli": 4, "left": 4, "out": 4, "intuit": 4, "readabl": [4, 5, 6], "loop": 4, "incredibli": 4, "style": [4, 6], "scalar": 4, "implementor": 4, "advis": 4, "applic": 4, "practic": 4, "might": 4, "prioritz": 4, "potenti": [4, 7], "pep": [4, 8], "696": 4, "specifi": 4, "omit": 4, "abl": 4, "would": [4, 5, 8], "principl": 4, "upper": 4, "domain": 4, "cours": [4, 5, 9], "unfortun": 4, "tower": 4, "circulat": 4, "discuss": [4, 7], "matter": [4, 5], "stale": 4, "unresolv": 4, "widen": 4, "part": [5, 7, 9, 10], "familiar": [5, 10], "who": [5, 9], "again": [5, 6, 8], "emphas": 5, "behav": 5, "len": [5, 6], "1d": 5, "fastest": [5, 7], "through": [5, 8, 12], "almost": 5, "word": 5, "here": [5, 8, 11], "circumst": [5, 6, 7], "probabl": [5, 7, 10, 11], "abov": [5, 6, 7], "idiom": 5, "onc": 5, "zip": 5, "reason": [5, 6], "why": [5, 6, 7], "independ": 5, "slower": [5, 7], "addit": 5, "abstract": [5, 7], "aspect": 5, "selv": 5, "2d": 5, "option": 5, "path": 5, "roughli": 5, "inform": [5, 7], "oftentim": 6, "foremost": 6, "help": 6, "reinforc": 6, "beyond": 6, "bother": 6, "my": 6, "least": [6, 9], "ambigu": 6, "glanc": 6, "subtl": 6, "benefici": 6, "addition": 6, "empti": 6, "form": [6, 7], "structur": [6, 8], "unabl": 6, "repres": [6, 9], "By": [6, 11], "forc": 6, "match": 6, "edg": 6, "account": 6, "ok": 6, "thing": [6, 11], "don": [6, 10, 11], "bear": 6, "mind": [6, 9], "drawback": 6, "explain": [6, 7], "immedi": 6, "guid": [7, 9, 11], "behind": [7, 9], "scene": [7, 9], "detail": [7, 8, 9, 12], "impact": [7, 9], "talk": [7, 10], "about": [7, 10, 11], "essenc": 7, "base": 7, "layout": 7, "deem": 7, "core": [7, 12], "hold": 7, "remaind": 7, "segment": [7, 10], "pertain": 7, "due": [7, 8], "reduct": 7, "speed": 7, "extens": 7, "effect": [7, 9], "imperceiv": 7, "scrub": 7, "along": [7, 11], "shown": 7, "composit": 7, "relationship": 7, "swap": 7, "ve": [7, 8, 11], "seen": [7, 11], "until": 7, "lot": 7, "veri": 7, "page": 7, "fulli": 7, "unari": 7, "receiv": 7, "known": 7, "pai": 7, "transposit": 7, "full": 7, "moment": [7, 12], "creation": 7, "chain": 7, "crude": 7, "model": 7, "actual": [7, 10], "proport": 7, "proceed": 7, "big": 7, "bigger": 7, "languag": [7, 9], "alloc": 7, "massiv": 7, "scenario": 7, "sacrif": 7, "huge": 7, "save": 7, "sake": 7, "alik": 7, "affect": 7, "somewhat": [8, 9], "featur": 8, "statement": 8, "bracket": 8, "context": 8, "denot": 8, "notion": 8, "gave": 8, "To": 8, "explicitli": [8, 10], "__match_args__": 8, "syntax": 8, "bit": [8, 10], "mislead": 8, "intention": 8, "636": 8, "learn": [8, 11], "fundament": 9, "root": 9, "strang": 9, "despit": 9, "contigu": 9, "block": 9, "fake": 9, "commit": 9, "idea": 9, "interest": 9, "enabl": 9, "attempt": 9, "rest": [9, 10], "philosophi": 9, "premis": 9, "alon": 9, "fuller": 9, "understand": 9, "brief": 9, "advanc": 9, "ax": 10, "thought": 10, "packag": 10, "unfamiliar": 10, "essenti": 10, "axi": 10, "confin": 10, "decid": 10, "nomenclatur": 10, "invert": 10, "awar": 10, "ones": 10, "great": [10, 11], "split": 10, "flip_row": 10, "flip_col": 10, "neglect": 10, "mention": 10, "previou": 10, "involv": 10, "far": 11, "opt": 11, "develop": 11, "check": [11, 12], "valid": 11, "descrep": 11, "execut": 11, "remov": 11, "correct": 11, "deduct": 11, "test": [11, 12], "mypi": 11, "plan": 11, "instanti": 11, "arrang": 11, "valuetyp": 11, "properli": 11, "fix": 11, "assum": 11, "error": 11, "f": 11, "incompat": 11, "down": 11, "redundantli": 11, "accord": 11, "flag": 11, "notic": 11, "thousand": 11, "timeit": 11, "repeat": 11, "global": 11, "3656925": 11, "327279": 11, "3131848": 11, "3171339": 11, "320178200000001": 11, "With": 11, "2557397": 11, "1544341": 11, "1569906": 11, "190821700000001": 11, "1678824": 11, "introduct": 11, "layman": 12, "famili": 12, "comprehens": 12, "seamless": 12, "servic": 12, "math": 12, "fsum": 12, "sqrt": 12, "isclos": 12, "norm": 12, "lambda": 12, "26726": 12, "53452": 12, "80178": 12, "45584": 12, "56980": 12, "68376": 12, "50257": 12, "57436": 12, "64616": 12, "assert": 12, "avail": 12, "pip": 12, "instal": 12, "infanc": 12, "beta": 12, "further": 12, "conduct": 12, "braedyn": 12, "feel": 12, "report": 12, "bug": 12, "pull": 12, "request": 12, "repositori": 12, "distribut": 12, "mit": 12, "file": 12}, "objects": {"matrixlib": [[0, 0, 0, "-", "builtins"], [1, 0, 0, "-", "rule"]], "matrixlib.builtins": [[0, 1, 1, "", "ComplexMatrix"], [0, 1, 1, "", "IntegerMatrix"], [0, 3, 1, "", "IntegralMatrix"], [0, 1, 1, "", "Matrix"], [0, 1, 1, "", "RealMatrix"]], "matrixlib.builtins.ComplexMatrix": [[0, 2, 1, "", "__abs__"], [0, 2, 1, "", "__add__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "__mul__"], [0, 2, 1, "", "__neg__"], [0, 2, 1, "", "__pos__"], [0, 2, 1, "", "__radd__"], [0, 2, 1, "", "__rmul__"], [0, 2, 1, "", "__rsub__"], [0, 2, 1, "", "__rtruediv__"], [0, 2, 1, "", "__sub__"], [0, 2, 1, "", "__truediv__"], [0, 2, 1, "", "conjugate"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transjugate"], [0, 2, 1, "", "transpose"]], "matrixlib.builtins.IntegerMatrix": [[0, 2, 1, "", "__abs__"], [0, 2, 1, "", "__add__"], [0, 2, 1, "", "__and__"], [0, 2, 1, "", "__divmod__"], [0, 2, 1, "", "__floordiv__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__invert__"], [0, 2, 1, "", "__lshift__"], [0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "__mod__"], [0, 2, 1, "", "__mul__"], [0, 2, 1, "", "__neg__"], [0, 2, 1, "", "__or__"], [0, 2, 1, "", "__pos__"], [0, 2, 1, "", "__radd__"], [0, 2, 1, "", "__rand__"], [0, 2, 1, "", "__rdivmod__"], [0, 2, 1, "", "__rfloordiv__"], [0, 2, 1, "", "__rlshift__"], [0, 2, 1, "", "__rmod__"], [0, 2, 1, "", "__rmul__"], [0, 2, 1, "", "__ror__"], [0, 2, 1, "", "__rrshift__"], [0, 2, 1, "", "__rshift__"], [0, 2, 1, "", "__rsub__"], [0, 2, 1, "", "__rxor__"], [0, 2, 1, "", "__sub__"], [0, 2, 1, "", "__xor__"], [0, 2, 1, "", "conjugate"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transjugate"], [0, 2, 1, "", "transpose"]], "matrixlib.builtins.Matrix": [[0, 2, 1, "", "__contains__"], [0, 2, 1, "", "__copy__"], [0, 2, 1, "", "__deepcopy__"], [0, 2, 1, "", "__eq__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "__iter__"], [0, 2, 1, "", "__len__"], [0, 2, 1, "", "__repr__"], [0, 2, 1, "", "__reversed__"], [0, 2, 1, "", "__str__"], [0, 4, 1, "", "array"], [0, 2, 1, "", "count"], [0, 2, 1, "", "equal"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "format"], [0, 2, 1, "", "from_nesting"], [0, 2, 1, "", "index"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "n"], [0, 4, 1, "", "ncols"], [0, 2, 1, "", "not_equal"], [0, 4, 1, "", "nrows"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 4, 1, "", "shape"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transpose"], [0, 2, 1, "", "values"]], "matrixlib.builtins.RealMatrix": [[0, 2, 1, "", "__add__"], [0, 2, 1, "", "__divmod__"], [0, 2, 1, "", "__floordiv__"], [0, 2, 1, "", "__ge__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__gt__"], [0, 2, 1, "", "__le__"], [0, 2, 1, "", "__lt__"], [0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "__mod__"], [0, 2, 1, "", "__mul__"], [0, 2, 1, "", "__neg__"], [0, 2, 1, "", "__pos__"], [0, 2, 1, "", "__radd__"], [0, 2, 1, "", "__rdivmod__"], [0, 2, 1, "", "__rfloordiv__"], [0, 2, 1, "", "__rmod__"], [0, 2, 1, "", "__rmul__"], [0, 2, 1, "", "__rsub__"], [0, 2, 1, "", "__rtruediv__"], [0, 2, 1, "", "__sub__"], [0, 2, 1, "", "__truediv__"], [0, 2, 1, "", "compare"], [0, 2, 1, "", "conjugate"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "greater"], [0, 2, 1, "", "greater_equal"], [0, 2, 1, "", "lesser"], [0, 2, 1, "", "lesser_equal"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transjugate"], [0, 2, 1, "", "transpose"]], "matrixlib.rule": [[1, 3, 1, "", "COL"], [1, 3, 1, "", "ROW"], [1, 1, 1, "", "Rule"]], "matrixlib.rule.Rule": [[1, 5, 1, "", "COL"], [1, 5, 1, "", "ROW"], [1, 2, 1, "", "__invert__"], [1, 4, 1, "", "handle"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 4], "ins": 0, "rule": [1, 10], "best": 2, "practic": 2, "oper": [2, 4], "type": [2, 4, 11], "changelog": 3, "version": 3, "0": 3, "3": 3, "2": 3, "public": 3, "privat": 3, "1": 3, "faq": 4, "gener": 4, "The": 4, "document": 4, "talk": 4, "about": 4, "vector": 4, "lot": 4, "where": 4, "ar": 4, "how": 4, "can": 4, "i": 4, "creat": 4, "matrix": 4, "more": 4, "dimens": 4, "e": 4, "g": 4, "tensor": 4, "write": 4, "add": 4, "remov": 4, "entri": 4, "re": 4, "shape": 4, "what": 4, "": 4, "differ": 4, "between": 4, "__eq__": 4, "equal": 4, "__ne__": 4, "not_equ": 4, "etc": 4, "why": 4, "take": 4, "so": 4, "long": 4, "index": 4, "thi": 4, "my": 4, "too": 4, "do": 4, "speed": 4, "up": 4, "design": 4, "decis": 4, "stringmatrix": 4, "matric": 4, "immut": 4, "name": 4, "transjug": 4, "you": 4, "broadcast": 4, "row": 4, "column": 4, "argument": 4, "arrang": 4, "m": 4, "n": 4, "t": 4, "rather": 4, "than": 4, "numer": 4, "constrain": 4, "onli": 4, "access": 5, "construct": 6, "materi": 7, "state": 7, "pattern": 8, "match": 8, "prelud": 9, "matrixlib": 12, "get": 12, "start": 12, "contribut": 12, "licens": 12}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Built-ins": [[0, "module-matrixlib.builtins"]], "Rules": [[1, "module-matrixlib.rule"], [10, "rules"]], "Best Practices": [[2, "best-practices"]], "Operations": [[2, "operations"]], "Typing": [[2, "typing"], [11, "typing"]], "Changelog": [[3, "changelog"]], "Version 0.3.2": [[3, "version-0-3-2"]], "Public": [[3, "public"], [3, "id2"]], "Private": [[3, "private"], [3, "id3"]], "Version 0.3.1": [[3, "version-0-3-1"]], "Version 0.3.0": [[3, "version-0-3-0"]], "FAQ": [[4, "faq"]], "General": [[4, "general"]], "The documentation talks about vectors a lot, but where are the vectors?": [[4, "the-documentation-talks-about-vectors-a-lot-but-where-are-the-vectors"]], "How can I create a matrix with more dimensions (e.g., a tensor)?": [[4, "how-can-i-create-a-matrix-with-more-dimensions-e-g-a-tensor"]], "How can I write/add/remove entries of a matrix?": [[4, "how-can-i-write-add-remove-entries-of-a-matrix"]], "How can I re-shape a matrix?": [[4, "how-can-i-re-shape-a-matrix"]], "What\u2019s the difference between __eq__() and equal(), __ne__() and not_equal(), etc.?": [[4, "what-s-the-difference-between-eq-and-equal-ne-and-not-equal-etc"]], "Why is it taking so long to index this matrix?": [[4, "why-is-it-taking-so-long-to-index-this-matrix"]], "My matrix operation is taking too long. How do I speed it up?": [[4, "my-matrix-operation-is-taking-too-long-how-do-i-speed-it-up"]], "Design Decisions": [[4, "design-decisions"]], "Why is there no StringMatrix type?": [[4, "why-is-there-no-stringmatrix-type"]], "Why are matrices immutable?": [[4, "why-are-matrices-immutable"]], "Why the name \u201ctransjugate\u201d?": [[4, "why-the-name-transjugate"]], "Why can you not broadcast rows and columns?": [[4, "why-can-you-not-broadcast-rows-and-columns"]], "Why are the type arguments arranged as Matrix[M, N, T], rather than Matrix[T, M, N]?": [[4, "why-are-the-type-arguments-arranged-as-matrix-m-n-t-rather-than-matrix-t-m-n"]], "Why are the numeric matrices constrained to only built-in numeric types?": [[4, "why-are-the-numeric-matrices-constrained-to-only-built-in-numeric-types"]], "Access": [[5, "access"]], "Construction": [[6, "construction"]], "Material State": [[7, "material-state"]], "Pattern Matching": [[8, "pattern-matching"]], "Prelude": [[9, "prelude"]], "MatrixLib": [[12, "matrixlib"]], "Getting Started": [[12, "getting-started"]], "Contributing": [[12, "contributing"]], "License": [[12, "license"]]}, "indexentries": {"complexmatrix (class in matrixlib.builtins)": [[0, "matrixlib.builtins.ComplexMatrix"]], "integermatrix (class in matrixlib.builtins)": [[0, "matrixlib.builtins.IntegerMatrix"]], "integralmatrix (in module matrixlib.builtins)": [[0, "matrixlib.builtins.IntegralMatrix"]], "matrix (class in matrixlib.builtins)": [[0, "matrixlib.builtins.Matrix"]], "realmatrix (class in matrixlib.builtins)": [[0, "matrixlib.builtins.RealMatrix"]], "__abs__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__abs__"]], "__abs__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__abs__"]], "__add__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__add__"]], "__add__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__add__"]], "__add__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__add__"]], "__and__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__and__"]], "__contains__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__contains__"]], "__copy__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__copy__"]], "__deepcopy__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__deepcopy__"]], "__divmod__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__divmod__"]], "__divmod__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__divmod__"]], "__eq__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__eq__"]], "__floordiv__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__floordiv__"]], "__floordiv__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__floordiv__"]], "__ge__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__ge__"]], "__getitem__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__getitem__"]], "__getitem__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__getitem__"]], "__getitem__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__getitem__"]], "__getitem__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__getitem__"]], "__gt__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__gt__"]], "__hash__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__hash__"]], "__init__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__init__"]], "__invert__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__invert__"]], "__iter__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__iter__"]], "__le__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__le__"]], "__len__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__len__"]], "__lshift__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__lshift__"]], "__lt__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__lt__"]], "__matmul__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__matmul__"]], "__matmul__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__matmul__"]], "__matmul__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__matmul__"]], "__mod__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__mod__"]], "__mod__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__mod__"]], "__mul__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__mul__"]], "__mul__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__mul__"]], "__mul__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__mul__"]], "__neg__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__neg__"]], "__neg__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__neg__"]], "__neg__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__neg__"]], "__or__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__or__"]], "__pos__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__pos__"]], "__pos__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__pos__"]], "__pos__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__pos__"]], "__radd__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__radd__"]], "__radd__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__radd__"]], "__radd__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__radd__"]], "__rand__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rand__"]], "__rdivmod__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rdivmod__"]], "__rdivmod__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__rdivmod__"]], "__repr__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__repr__"]], "__reversed__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__reversed__"]], "__rfloordiv__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rfloordiv__"]], "__rfloordiv__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__rfloordiv__"]], "__rlshift__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rlshift__"]], "__rmod__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rmod__"]], "__rmod__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__rmod__"]], "__rmul__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__rmul__"]], "__rmul__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rmul__"]], "__rmul__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__rmul__"]], "__ror__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__ror__"]], "__rrshift__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rrshift__"]], "__rshift__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rshift__"]], "__rsub__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__rsub__"]], "__rsub__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rsub__"]], "__rsub__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__rsub__"]], "__rtruediv__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__rtruediv__"]], "__rtruediv__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__rtruediv__"]], "__rxor__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__rxor__"]], "__str__() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.__str__"]], "__sub__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__sub__"]], "__sub__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__sub__"]], "__sub__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__sub__"]], "__truediv__() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.__truediv__"]], "__truediv__() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.__truediv__"]], "__xor__() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.__xor__"]], "array (matrixlib.builtins.matrix property)": [[0, "matrixlib.builtins.Matrix.array"]], "compare() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.compare"]], "conjugate() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.conjugate"]], "conjugate() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.conjugate"]], "conjugate() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.conjugate"]], "count() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.count"]], "equal() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.equal"]], "flip() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.flip"]], "flip() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.flip"]], "flip() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.flip"]], "flip() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.flip"]], "format() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.format"]], "from_nesting() (matrixlib.builtins.matrix class method)": [[0, "matrixlib.builtins.Matrix.from_nesting"]], "greater() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.greater"]], "greater_equal() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.greater_equal"]], "index() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.index"]], "lesser() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.lesser"]], "lesser_equal() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.lesser_equal"]], "materialize() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.materialize"]], "materialize() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.materialize"]], "materialize() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.materialize"]], "materialize() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.materialize"]], "matrixlib.builtins": [[0, "module-matrixlib.builtins"]], "module": [[0, "module-matrixlib.builtins"], [1, "module-matrixlib.rule"]], "n() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.n"]], "ncols (matrixlib.builtins.matrix property)": [[0, "matrixlib.builtins.Matrix.ncols"]], "not_equal() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.not_equal"]], "nrows (matrixlib.builtins.matrix property)": [[0, "matrixlib.builtins.Matrix.nrows"]], "reverse() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.reverse"]], "reverse() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.reverse"]], "reverse() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.reverse"]], "reverse() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.reverse"]], "rotate() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.rotate"]], "rotate() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.rotate"]], "rotate() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.rotate"]], "rotate() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.rotate"]], "shape (matrixlib.builtins.matrix property)": [[0, "matrixlib.builtins.Matrix.shape"]], "slices() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.slices"]], "slices() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.slices"]], "slices() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.slices"]], "slices() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.slices"]], "transjugate() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.transjugate"]], "transjugate() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.transjugate"]], "transjugate() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.transjugate"]], "transpose() (matrixlib.builtins.complexmatrix method)": [[0, "matrixlib.builtins.ComplexMatrix.transpose"]], "transpose() (matrixlib.builtins.integermatrix method)": [[0, "matrixlib.builtins.IntegerMatrix.transpose"]], "transpose() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.transpose"]], "transpose() (matrixlib.builtins.realmatrix method)": [[0, "matrixlib.builtins.RealMatrix.transpose"]], "values() (matrixlib.builtins.matrix method)": [[0, "matrixlib.builtins.Matrix.values"]], "col (in module matrixlib.rule)": [[1, "matrixlib.rule.COL"]], "col (matrixlib.rule.rule attribute)": [[1, "matrixlib.rule.Rule.COL"]], "row (in module matrixlib.rule)": [[1, "matrixlib.rule.ROW"]], "row (matrixlib.rule.rule attribute)": [[1, "matrixlib.rule.Rule.ROW"]], "rule (class in matrixlib.rule)": [[1, "matrixlib.rule.Rule"]], "__invert__() (matrixlib.rule.rule method)": [[1, "matrixlib.rule.Rule.__invert__"]], "handle (matrixlib.rule.rule property)": [[1, "matrixlib.rule.Rule.handle"]], "matrixlib.rule": [[1, "module-matrixlib.rule"]]}})