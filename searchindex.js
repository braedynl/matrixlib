Search.setIndex({"docnames": ["api-builtins", "api-rules", "changelog", "faq", "guide-access", "guide-construction", "guide-material-state", "guide-prelude", "guide-rules", "guide-typing", "index"], "filenames": ["api-builtins.rst", "api-rules.rst", "changelog.rst", "faq.rst", "guide-access.rst", "guide-construction.rst", "guide-material-state.rst", "guide-prelude.rst", "guide-rules.rst", "guide-typing.rst", "index.rst"], "titles": ["Built-ins", "Rules", "Changelog", "FAQ", "Access", "Construction", "Material State", "Prelude", "Rules", "Typing", "Matrices-Py"], "terms": {"matrix": [0, 1, 4, 5, 6, 7, 8, 9, 10], "type": [0, 4, 5, 6, 7, 8, 10], "definit": [0, 8], "class": [0, 1, 3, 6, 8, 9], "matric": [0, 1, 4, 5, 6, 7, 8, 9], "builtin": [0, 9], "arrai": [0, 4, 7, 8], "mesh": [0, 6], "m_co": 0, "n_co": 0, "t_co": [0, 3], "collect": [0, 3], "abc": 0, "iter": [0, 4, 5, 6, 7, 8, 10], "shape": [0, 1, 4, 5, 6, 7, 8, 9, 10], "liter": [0, 1, 9, 10], "rule": [0, 3], "row": [0, 1, 4, 6, 7, 8, 9, 10], "0": [0, 1, 4, 5, 8, 9, 10], "col": [0, 1, 3, 4, 8, 9], "1": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10], "tupl": [0, 4], "A": [0, 3, 6, 8], "hybrid": [0, 6], "one": [0, 3, 4, 5, 6, 7, 8], "two": [0, 1, 3, 5, 6, 7, 8], "rank": [0, 3, 6], "immut": 0, "sequenc": [0, 1, 3, 4, 5, 6, 7, 8], "implement": [0, 3, 4, 6, 7, 8, 10], "interfac": [0, 3, 6, 7], "alongsid": 0, "dimension": [0, 3, 5, 7, 8], "transform": 0, "access": [0, 3, 5, 6, 8], "abil": [0, 9], "provid": [0, 3, 6, 8, 9], "onli": [0, 5, 6, 8, 9], "few": [0, 4], "vector": [0, 8, 9], "oper": [0, 3, 6, 7, 9], "ar": [0, 4, 5, 6, 7, 8, 9, 10], "usabl": 0, "object": [0, 3, 4, 5, 6, 9], "ani": [0, 1, 3, 8], "__init__": [0, 3], "none": 0, "construct": [0, 3, 6, 8, 9], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "an": [0, 1, 3, 4, 5, 6, 7, 8, 9], "anoth": [0, 5, 6], "instanc": [0, 3, 6, 7], "If": [0, 3, 4, 6, 7, 8, 9], "i": [0, 2, 4, 5, 6, 7, 8, 9, 10], "interpret": [0, 1, 4, 5, 8], "either": 0, "column": [0, 1, 4, 7, 8], "depend": [0, 6], "given": [0, 3, 4], "member": [0, 1, 3, 8], "rais": [0, 5], "valueerror": [0, 5], "": [0, 1, 4, 5, 6, 8, 9], "valu": [0, 1, 3, 4, 5, 8, 9], "neg": [0, 5, 9], "product": [0, 5, 9], "doe": [0, 3, 5, 6, 7, 8], "equal": [0, 5, 6, 9], "length": [0, 4, 5, 8], "debug": [0, 9], "what": [0, 4, 6, 7, 9], "we": [0, 2, 3, 4, 5, 6, 7, 8, 9], "call": [0, 3, 4, 6], "cast": [0, 3], "constant": 0, "time": [0, 3, 4, 5, 6, 9], "some": [0, 3, 4, 6, 7, 8, 9], "usual": [0, 3, 8], "well": [0, 3, 4, 6], "can": [0, 4, 5, 6, 7, 8, 9], "vari": 0, "its": [0, 1, 3, 4, 6, 7, 8, 10], "materi": [0, 3], "state": [0, 3], "thi": [0, 2, 4, 5, 6, 7, 8, 9, 10], "also": [0, 3, 4, 5], "how": [0, 4, 6], "re": [0, 6, 8], "__repr__": 0, "str": [0, 3], "return": [0, 1, 4, 9, 10], "canon": 0, "represent": [0, 5], "__str__": 0, "string": 0, "__eq__": 0, "other": [0, 4, 6, 7, 9], "bool": 0, "true": [0, 4], "otherwis": [0, 9], "fals": 0, "__hash__": 0, "int": [0, 3, 9, 10], "hash": 0, "hashabl": [0, 3], "__getitem__": [0, 4], "kei": [0, 3], "slice": [0, 3, 4, 6, 9, 10], "sub": [0, 1, 3], "correspond": [0, 1, 8], "__iter__": [0, 4], "over": [0, 3, 4], "major": [0, 4, 7], "order": [0, 3, 4, 9], "__reversed__": [0, 4], "revers": [0, 3, 4, 6], "__contains__": 0, "contain": [0, 9], "final": [0, 1], "__deepcopy__": 0, "memo": 0, "self": 0, "__copy__": 0, "properti": [0, 1, 3], "The": [0, 1, 4, 5, 6, 7, 8, 9, 10], "underli": [0, 4], "align": [0, 4], "minimum": 0, "have": [0, 3, 4, 5, 6, 8, 9], "make": [0, 1, 3, 4, 7, 10], "guarante": [0, 3, 6], "concret": 0, "varieti": 0, "intern": [0, 5, 6, 7, 9], "condit": [0, 6], "number": [0, 3, 6, 8, 9], "nrow": [0, 9], "ncol": [0, 9], "classmethod": 0, "from_nest": [0, 3, 5, 6, 10], "nest": 0, "singli": 0, "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "shallowest": 0, "deduc": [0, 9], "inconsist": 0, "index": [0, 1, 4], "start": 0, "stop": 0, "first": [0, 2, 3, 5], "where": [0, 4, 5, 6, 7, 8, 9], "appear": [0, 3], "present": 0, "count": [0, 3], "copi": [0, 3, 4], "certain": [0, 3], "method": [0, 3, 4, 5, 6, 8, 9], "particularli": [0, 3, 8], "those": [0, 4, 6, 7, 9], "permut": [0, 3, 6], "fashion": [0, 4, 8], "view": [0, 3, 6], "onto": [0, 6], "preserv": [0, 3], "memori": [0, 3, 4, 6, 7], "These": 0, "stack": [0, 3, 6], "which": [0, 3, 4, 6, 8], "drastic": 0, "increas": 0, "address": 0, "said": [0, 3], "issu": 0, "shallowli": 0, "place": [0, 6], "element": [0, 1, 3, 6, 7, 8], "new": [0, 3, 6], "process": 0, "result": [0, 3, 9], "ident": [0, 3, 6], "creat": [0, 5, 6, 9], "pair": [0, 5, 6], "note": [0, 3, 4, 9], "mai": [0, 6, 7, 10], "consum": 0, "signific": [0, 9], "amount": [0, 3], "size": 0, "store": [0, 5, 6], "kind": [0, 3, 6], "semant": 0, "equival": [0, 1, 4], "origin": 0, "thei": [0, 3, 4, 6, 8, 9], "whose": [0, 5], "alreadi": [0, 5, 7], "exist": [0, 3, 4, 5, 8], "desir": [0, 3], "think": [0, 3, 7], "being": [0, 3, 4, 7, 8, 10], "akin": 0, "compil": [0, 9], "regular": 0, "express": [0, 3], "same": [0, 3, 6], "requir": [0, 3, 4, 8, 10], "mani": [0, 1, 2, 4, 7, 8], "differ": [0, 6, 8], "much": [0, 2, 3, 4, 5, 6, 9], "more": [0, 4, 5, 6, 7, 8, 9, 10], "effici": 0, "substitut": 0, "variabl": [0, 3], "transpos": [0, 3, 6], "flip": [0, 3, 6, 8], "rotat": [0, 3, 6], "n": [0, 4, 5, 7, 9], "4": [0, 3, 4, 5, 6, 7, 8, 9, 10], "2": [0, 3, 4, 5, 6, 7, 8, 9, 10], "3": [0, 3, 4, 5, 6, 7, 8, 9, 10], "increment": 0, "90": 0, "degre": 0, "counter": 0, "clockwis": 0, "posit": 0, "all": [0, 3, 4, 6, 7, 9, 10], "integ": [0, 4, 8], "accept": [0, 3, 7, 8], "outsid": 0, "small": 0, "rang": [0, 4, 8, 9], "zero": 0, "lose": 0, "precis": 0, "dimens": [0, 1, 4, 8], "format": 0, "field_width": 0, "8": [0, 5, 10], "write": [0, 4, 9], "field": 0, "multi": 0, "line": 0, "exce": 0, "truncat": 0, "last": [0, 3, 6], "charact": 0, "slot": 0, "purpos": [0, 3, 8, 10], "includ": [0, 3, 7], "ellipsi": 0, "u": [0, 6], "2026": 0, "signifi": 0, "width": 0, "must": [0, 6, 9], "larger": 0, "entireti": 0, "primarili": 0, "intend": 0, "interact": 0, "session": 0, "reli": 0, "serial": 0, "similar": [0, 3, 4], "discourag": [0, 2, 3], "chang": [0, 2, 6, 10], "without": [0, 7, 9], "regard": [0, 3, 6, 9], "backward": [0, 10], "compat": [0, 3, 10], "integermatrix": [0, 3, 6], "wise": [0, 1, 3, 7, 8], "b": [0, 3, 5, 6, 8, 9, 10], "not_equ": 0, "complexmatrix": [0, 3, 6, 9], "constrain": 0, "complex": [0, 3, 6], "c_co": 0, "__add__": [0, 3, 6, 9], "float": [0, 3, 9, 10], "__sub__": 0, "__mul__": 0, "__matmul__": [0, 3], "p_co": 0, "__truediv__": 0, "__radd__": 0, "__rsub__": 0, "__rmul__": 0, "__rtruediv__": 0, "__neg__": 0, "__pos__": 0, "__abs__": 0, "realmatrix": [0, 3, 6, 9, 10], "ab": 0, "conjug": [0, 3], "transjug": 0, "activ": 0, "__lt__": 0, "lexicograph": 0, "__le__": 0, "__gt__": 0, "__ge__": 0, "r_co": 0, "__floordiv__": 0, "__mod__": [0, 6, 9], "__divmod__": 0, "divmod": 0, "__rfloordiv__": 0, "__rmod__": 0, "__rdivmod__": 0, "compar": [0, 3], "less": [0, 3, 4, 8, 9], "than": [0, 4, 5, 6, 8], "greater": 0, "respect": [0, 3, 9], "second": [0, 3], "lesser": 0, "lesser_equ": 0, "greater_equ": 0, "i_co": 0, "__lshift__": 0, "__rshift__": 0, "__and__": [0, 6], "__xor__": 0, "__or__": 0, "__rlshift__": 0, "__rrshift__": 0, "__rand__": 0, "__rxor__": 0, "__ror__": 0, "__invert__": [0, 1], "enum": [1, 8], "alias": [1, 8], "dictat": [1, 8], "each": [1, 8, 9], "map": [1, 8, 9], "retriev": [1, 4, 8], "should": [1, 3, 4], "function": [1, 3, 7, 8, 9], "assumpt": 1, "ha": [1, 3, 4, 6, 7, 9], "just": [1, 6, 8], "opposit": [1, 8], "handl": [1, 8], "un": 1, "python": [1, 3, 6, 7, 9, 10], "name": [1, 4, 7], "consid": [2, 3, 6], "real": 2, "librari": [2, 3, 7, 8, 10], "most": [2, 3, 4, 9], "api": [2, 3, 4, 6, 7, 8, 9], "underw": 2, "larg": [2, 3], "fundament": [2, 7], "structur": 2, "do": [2, 3, 5, 6, 7, 9], "anticip": 2, "further": [2, 10], "magnitud": 2, "believ": [2, 3, 6], "ve": [2, 6, 9], "settl": 2, "solid": 2, "foundat": 2, "highli": 2, "introduc": 2, "monument": 2, "pretti": 2, "everyth": 2, "effect": [2, 7], "wipe": 2, "signatur": 2, "prior": [2, 9], "document": [2, 9], "prevent": 2, "simpli": 3, "while": [3, 5], "ll": [3, 4, 5, 6, 7], "find": [3, 6], "common": [3, 6], "fallback": 3, "when": [3, 5, 6, 9], "flatten": [3, 4, 5, 7], "manner": [3, 4, 7, 9], "recommend": [3, 5, 7, 10], "wai": [3, 4, 5, 6, 7], "pass": [3, 4, 9], "content": 3, "constructor": [3, 5, 9], "import": [3, 4, 5, 6, 7, 8, 9, 10], "print": [3, 4, 5, 7, 8, 9, 10], "could": 3, "simul": 3, "higher": 3, "truli": 3, "numpi": [3, 4, 7, 8], "your": [3, 9], "choic": 3, "tool": 3, "For": [3, 7, 9], "case": [3, 4, 5, 6, 7], "mutat": 3, "list": [3, 5], "necessari": 3, "after": [3, 9], "perform": [3, 7], "join": 3, "concaten": 3, "them": [3, 9], "l": [3, 9, 10], "o": [3, 6, 9], "avoid": [3, 6], "hard": 3, "infer": [3, 5], "parallel": [3, 8], "ndarrai": [3, 7], "reshap": 3, "special": 3, "comparison": [3, 6], "summar": 3, "lexicogaph": 3, "done": [3, 8], "non": [3, 6, 9], "variant": 3, "yield": 3, "unequ": 3, "expect": [3, 4, 8, 9], "often": [3, 4, 9], "short": [3, 6], "circuit": 3, "slow": 3, "like": [3, 4, 5, 6, 9], "wa": [3, 8], "follow": [3, 6], "themselv": 3, "occur": 3, "combin": [3, 6], "come": [3, 6, 8, 9], "cost": [3, 6], "insuffici": 3, "sacrific": [3, 6], "extra": 3, "There": [3, 4, 5, 6, 7, 8], "need": [3, 4, 6, 7, 9], "manual": [3, 4], "alwai": [3, 4, 10], "produc": [3, 6], "standard": 3, "arithmet": [3, 6], "inclus": 3, "futur": [3, 6, 9, 10], "version": [3, 5, 6], "meant": 3, "easili": 3, "too": [3, 4, 7, 9], "yourself": [3, 6, 9], "look": [3, 7], "see": [3, 5, 10], "typic": [3, 4, 9], "current": [3, 4, 6, 10], "debat": 3, "revolv": 3, "around": 3, "exampl": [3, 4, 5, 6, 8], "namespac": 3, "alter": [3, 8], "level": [3, 9], "experiment": 3, "question": 3, "benefit": [3, 5], "get": 3, "inher": 3, "thread": 3, "safe": 3, "sinc": [3, 4, 8, 9], "act": 3, "own": [3, 6], "give": 3, "refer": [3, 6, 9], "made": 3, "allow": [3, 5, 6], "dict": 3, "set": 3, "mutabl": 3, "dure": 3, "know": [3, 6, 8], "incom": 3, "In": [3, 4, 6, 9], "build": 3, "up": 3, "later": [3, 4, 9, 10], "routin": [3, 4], "both": [3, 6, 9], "via": [3, 6], "h": 3, "deliber": 3, "chose": 3, "goe": [3, 4], "against": 3, "convent": [3, 9], "contend": 3, "conjugate_transpos": 3, "hermitian_transpos": 3, "adjoint": 3, "argu": 3, "howev": [3, 5, 6, 7], "confus": 3, "adjug": 3, "sometim": 3, "classic": 3, "becaus": [3, 6], "conflict": 3, "went": 3, "admittedli": 3, "obscur": 3, "isn": 3, "terribli": 3, "better": [3, 4, 6], "concept": [3, 8], "knowingli": 3, "left": 3, "out": 3, "intuit": 3, "readabl": [3, 4, 5], "written": [3, 9], "loop": 3, "incredibli": 3, "easi": [3, 4], "style": [3, 5], "support": 3, "scalar": 3, "implementor": 3, "advis": 3, "applic": 3, "practic": 3, "latter": 3, "might": 3, "sens": [3, 6, 7], "5": [3, 4, 5, 6, 7, 8, 9, 10], "6": [3, 4, 5, 6, 7, 8, 9, 10], "prioritz": 3, "potenti": [3, 6], "pep": 3, "696": 3, "12": 3, "specifi": 3, "default": [3, 4, 7, 9], "omit": 3, "mean": [3, 5, 8], "abl": 3, "describ": [3, 6, 9], "would": [3, 4], "principl": 3, "appli": [3, 6], "upper": 3, "bound": 3, "domain": 3, "cours": [3, 4, 7], "continu": 3, "unfortun": 3, "tower": 3, "circulat": 3, "discuss": [3, 6], "subject": [3, 6], "matter": [3, 4], "been": [3, 7, 9], "stale": 3, "remain": 3, "unresolv": 3, "user": [3, 5, 8], "widen": 3, "part": [4, 6, 7, 8], "familiar": [4, 8], "who": [4, 7], "work": 4, "again": [4, 5], "emphas": 4, "behav": 4, "t": [4, 5, 7, 8, 9], "you": [4, 5, 6, 7, 8, 9], "len": [4, 5], "1d": 4, "fastest": [4, 6], "through": [4, 9, 10], "almost": 4, "directli": 4, "word": 4, "here": [4, 9], "circumst": [4, 5, 6, 8], "probabl": [4, 5, 6, 8, 9], "want": [4, 6, 7, 9], "abov": [4, 5, 6], "x": [4, 7, 9], "prefer": [4, 8], "idiom": 4, "faster": 4, "multipl": 4, "onc": 4, "built": [4, 7, 9], "zip": 4, "primari": 4, "reason": [4, 5], "why": [4, 5, 6], "so": [4, 6, 7, 9], "quick": 4, "expos": 4, "independ": [4, 9], "gener": [4, 6, 10], "slower": [4, 6], "even": [4, 7, 8, 9], "addit": 4, "layer": 4, "abstract": [4, 6], "accomplish": [4, 6], "though": [4, 6], "aspect": 4, "capabl": [4, 10], "selv": 4, "d": [4, 5, 8], "2d": 4, "option": 4, "fast": 4, "path": 4, "roughli": 4, "throughout": 5, "remaind": 5, "guid": [5, 6, 7, 9], "It": [5, 7], "take": [5, 7, 9], "foremost": 5, "help": 5, "reinforc": 5, "beyond": 5, "data": 5, "input": 5, "bother": 5, "my": 5, "opinion": 5, "least": [5, 7], "ambigu": 5, "glanc": 5, "subtl": 5, "benefici": 5, "addition": 5, "complet": 5, "empti": 5, "7": [5, 10], "9": [5, 9, 10], "cannot": 5, "repres": [5, 7], "By": [5, 9], "forc": 5, "match": 5, "edg": 5, "account": 5, "ok": 5, "c": [5, 6, 8, 9], "thing": [5, 9], "don": [5, 8, 9], "bear": 5, "mind": 5, "drawback": 5, "explain": [5, 6, 7], "immedi": 5, "cover": 6, "behind": [6, 7], "scene": [6, 7], "detail": [6, 7, 10], "impact": [6, 7], "befor": [6, 8], "talk": [6, 8], "about": [6, 8, 9], "essenc": 6, "realli": [6, 7], "wrapper": 6, "base": 6, "layout": 6, "deem": 6, "core": [6, 10], "hold": 6, "composit": 6, "relationship": 6, "freeli": 6, "seen": [6, 9], "until": 6, "now": 6, "lot": 6, "veri": 6, "page": 6, "fulli": 6, "form": 6, "unari": 6, "binari": 6, "etc": [6, 9], "receiv": 6, "known": 6, "itself": 6, "pai": 6, "transposit": 6, "full": 6, "moment": [6, 10], "creation": 6, "chain": 6, "crude": 6, "shown": 6, "model": 6, "v": 6, "actual": [6, 8], "possibl": [6, 9], "proport": 6, "proceed": 6, "expens": 6, "languag": [6, 7], "alloc": 6, "space": 6, "obvious": 6, "scenario": 6, "sacrif": 6, "huge": 6, "save": 6, "sake": 6, "speed": 6, "alik": 6, "within": 6, "affect": 6, "root": 7, "strang": 7, "despit": 7, "contigu": 7, "block": 7, "fake": 7, "instead": [7, 8], "commit": 7, "idea": 7, "interest": 7, "consequ": 7, "enabl": 7, "across": 7, "sum": [7, 9, 10], "21": 7, "extend": 7, "featur": 7, "task": 7, "seamlessli": 7, "integr": [7, 10], "rest": [7, 8], "philosophi": 7, "far": [7, 9], "understand": 7, "brief": 7, "advanc": 7, "move": 8, "ax": 8, "thought": 8, "packag": 8, "rather": 8, "unfamiliar": 8, "essenti": 8, "axi": 8, "limit": 8, "decid": 8, "nomenclatur": 8, "our": 8, "invert": 8, "awar": 8, "explicitli": 8, "argument": [8, 9], "ones": 8, "great": [8, 9], "split": 8, "e": 8, "g": 8, "flip_row": 8, "flip_col": 8, "conveni": 8, "neglect": 8, "mention": 8, "previou": 8, "segment": 8, "involv": 8, "system": 9, "opt": 9, "develop": 9, "check": [9, 10], "valid": 9, "checker": 9, "descrep": 9, "execut": 9, "let": 9, "remov": 9, "runtim": 9, "correct": 9, "deduct": 9, "test": [9, 10], "mypi": 9, "plan": 9, "instanti": 9, "reveal_typ": 9, "reveal": 9, "arrang": 9, "valuetyp": 9, "m": 9, "properli": 9, "fix": 9, "assum": 9, "alia": 9, "specif": 9, "error": 9, "def": [9, 10], "f": 9, "incompat": 9, "along": 9, "down": 9, "unpack": 9, "redund": 9, "verifi": 9, "accord": 9, "entir": 9, "flag": 9, "notic": 9, "hundr": 9, "random": 9, "timeit": 9, "repeat": 9, "_": 9, "global": 9, "3656925": 9, "327279": 9, "3131848": 9, "3171339": 9, "320178200000001": 9, "With": 9, "2557397": 9, "1544341": 9, "1569906": 9, "190821700000001": 9, "1678824": 9, "learn": 9, "introduct": 9, "layman": 10, "famili": 10, "comprehens": 10, "seamless": 10, "servic": 10, "math": 10, "isclos": 10, "norm": 10, "26726": 10, "53452": 10, "80178": 10, "45584": 10, "56980": 10, "68376": 10, "50257": 10, "57436": 10, "64616": 10, "assert": 10, "project": 10, "avail": 10, "pip": 10, "11": 10, "instal": 10, "infanc": 10, "beta": 10, "conduct": 10, "maintain": 10, "braedyn": 10, "feel": 10, "free": 10, "report": 10, "bug": 10, "pull": 10, "request": 10, "repositori": 10, "distribut": 10, "under": 10, "mit": 10, "file": 10}, "objects": {"matrices": [[0, 0, 0, "-", "builtins"], [1, 0, 0, "-", "rule"]], "matrices.builtins": [[0, 1, 1, "", "ComplexMatrix"], [0, 1, 1, "", "IntegerMatrix"], [0, 1, 1, "", "Matrix"], [0, 1, 1, "", "RealMatrix"]], "matrices.builtins.ComplexMatrix": [[0, 2, 1, "", "__abs__"], [0, 2, 1, "", "__add__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "__mul__"], [0, 2, 1, "", "__neg__"], [0, 2, 1, "", "__pos__"], [0, 2, 1, "", "__radd__"], [0, 2, 1, "", "__rmul__"], [0, 2, 1, "", "__rsub__"], [0, 2, 1, "", "__rtruediv__"], [0, 2, 1, "", "__sub__"], [0, 2, 1, "", "__truediv__"], [0, 2, 1, "", "conjugate"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transjugate"], [0, 2, 1, "", "transpose"]], "matrices.builtins.IntegerMatrix": [[0, 2, 1, "", "__abs__"], [0, 2, 1, "", "__add__"], [0, 2, 1, "", "__and__"], [0, 2, 1, "", "__divmod__"], [0, 2, 1, "", "__floordiv__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__invert__"], [0, 2, 1, "", "__lshift__"], [0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "__mod__"], [0, 2, 1, "", "__mul__"], [0, 2, 1, "", "__neg__"], [0, 2, 1, "", "__or__"], [0, 2, 1, "", "__pos__"], [0, 2, 1, "", "__radd__"], [0, 2, 1, "", "__rand__"], [0, 2, 1, "", "__rdivmod__"], [0, 2, 1, "", "__rfloordiv__"], [0, 2, 1, "", "__rlshift__"], [0, 2, 1, "", "__rmod__"], [0, 2, 1, "", "__rmul__"], [0, 2, 1, "", "__ror__"], [0, 2, 1, "", "__rrshift__"], [0, 2, 1, "", "__rshift__"], [0, 2, 1, "", "__rsub__"], [0, 2, 1, "", "__rxor__"], [0, 2, 1, "", "__sub__"], [0, 2, 1, "", "__xor__"], [0, 2, 1, "", "conjugate"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transjugate"], [0, 2, 1, "", "transpose"]], "matrices.builtins.Matrix": [[0, 2, 1, "", "__contains__"], [0, 2, 1, "", "__copy__"], [0, 2, 1, "", "__deepcopy__"], [0, 2, 1, "", "__eq__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__hash__"], [0, 2, 1, "", "__init__"], [0, 2, 1, "", "__iter__"], [0, 2, 1, "", "__repr__"], [0, 2, 1, "", "__reversed__"], [0, 2, 1, "", "__str__"], [0, 3, 1, "", "array"], [0, 2, 1, "", "count"], [0, 2, 1, "", "equal"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "format"], [0, 2, 1, "", "from_nesting"], [0, 2, 1, "", "index"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "n"], [0, 3, 1, "", "ncols"], [0, 2, 1, "", "not_equal"], [0, 3, 1, "", "nrows"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 3, 1, "", "shape"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transpose"], [0, 2, 1, "", "values"]], "matrices.builtins.RealMatrix": [[0, 2, 1, "", "__add__"], [0, 2, 1, "", "__divmod__"], [0, 2, 1, "", "__floordiv__"], [0, 2, 1, "", "__ge__"], [0, 2, 1, "", "__getitem__"], [0, 2, 1, "", "__gt__"], [0, 2, 1, "", "__le__"], [0, 2, 1, "", "__lt__"], [0, 2, 1, "", "__matmul__"], [0, 2, 1, "", "__mod__"], [0, 2, 1, "", "__mul__"], [0, 2, 1, "", "__neg__"], [0, 2, 1, "", "__pos__"], [0, 2, 1, "", "__radd__"], [0, 2, 1, "", "__rdivmod__"], [0, 2, 1, "", "__rfloordiv__"], [0, 2, 1, "", "__rmod__"], [0, 2, 1, "", "__rmul__"], [0, 2, 1, "", "__rsub__"], [0, 2, 1, "", "__rtruediv__"], [0, 2, 1, "", "__sub__"], [0, 2, 1, "", "__truediv__"], [0, 2, 1, "", "compare"], [0, 2, 1, "", "conjugate"], [0, 2, 1, "", "flip"], [0, 2, 1, "", "greater"], [0, 2, 1, "", "greater_equal"], [0, 2, 1, "", "lesser"], [0, 2, 1, "", "lesser_equal"], [0, 2, 1, "", "materialize"], [0, 2, 1, "", "reverse"], [0, 2, 1, "", "rotate"], [0, 2, 1, "", "slices"], [0, 2, 1, "", "transjugate"], [0, 2, 1, "", "transpose"]], "matrices.rule": [[1, 4, 1, "", "COL"], [1, 4, 1, "", "ROW"], [1, 1, 1, "", "Rule"]], "matrices.rule.Rule": [[1, 5, 1, "", "COL"], [1, 5, 1, "", "ROW"], [1, 2, 1, "", "__invert__"], [1, 3, 1, "", "handle"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:data", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 3], "ins": 0, "rule": [1, 8], "changelog": 2, "version": 2, "0": 2, "3": 2, "earlier": 2, "faq": 3, "gener": 3, "The": 3, "document": 3, "talk": 3, "about": 3, "vector": 3, "lot": 3, "where": 3, "ar": 3, "how": 3, "can": 3, "i": 3, "creat": 3, "matrix": 3, "more": 3, "dimens": 3, "e": 3, "g": 3, "tensor": 3, "write": 3, "add": 3, "remov": 3, "entri": 3, "re": 3, "shape": 3, "what": 3, "": 3, "differ": 3, "between": 3, "__eq__": 3, "equal": 3, "__ne__": 3, "not_equ": 3, "etc": 3, "why": 3, "take": 3, "so": 3, "long": 3, "index": 3, "thi": 3, "design": 3, "decis": 3, "stringmatrix": 3, "type": [3, 9], "matric": [3, 10], "immut": 3, "name": 3, "transjug": 3, "you": 3, "broadcast": 3, "row": 3, "column": 3, "argument": 3, "arrang": 3, "m": 3, "n": 3, "t": 3, "rather": 3, "than": 3, "numer": 3, "constrain": 3, "onli": 3, "access": 4, "construct": 5, "materi": 6, "state": 6, "prelud": 7, "py": 10, "get": 10, "start": 10, "contribut": 10, "licens": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Built-ins": [[0, "module-matrices.builtins"]], "Rules": [[1, "module-matrices.rule"], [8, "rules"]], "Changelog": [[2, "changelog"]], "Version 0.3.0": [[2, "version-0-3-0"]], "Earlier Versions": [[2, "earlier-versions"]], "FAQ": [[3, "faq"]], "General": [[3, "general"]], "The documentation talks about vectors a lot, but where are the vectors?": [[3, "the-documentation-talks-about-vectors-a-lot-but-where-are-the-vectors"]], "How can I create a matrix with more dimensions (e.g., a tensor)?": [[3, "how-can-i-create-a-matrix-with-more-dimensions-e-g-a-tensor"]], "How can I write/add/remove entries of a matrix?": [[3, "how-can-i-write-add-remove-entries-of-a-matrix"]], "How can I re-shape a matrix?": [[3, "how-can-i-re-shape-a-matrix"]], "What\u2019s the difference between __eq__() and equal(), __ne__() and not_equal(), etc.?": [[3, "what-s-the-difference-between-eq-and-equal-ne-and-not-equal-etc"]], "Why is it taking so long to index this matrix?": [[3, "why-is-it-taking-so-long-to-index-this-matrix"]], "Design Decisions": [[3, "design-decisions"]], "Why is there no StringMatrix type?": [[3, "why-is-there-no-stringmatrix-type"]], "Why are matrices immutable?": [[3, "why-are-matrices-immutable"]], "Why the name \u201ctransjugate\u201d?": [[3, "why-the-name-transjugate"]], "Why can you not broadcast rows and columns?": [[3, "why-can-you-not-broadcast-rows-and-columns"]], "Why are the type arguments arranged as Matrix[M, N, T], rather than Matrix[T, M, N]?": [[3, "why-are-the-type-arguments-arranged-as-matrix-m-n-t-rather-than-matrix-t-m-n"]], "Why are the numeric matrices constrained to only built-in numeric types?": [[3, "why-are-the-numeric-matrices-constrained-to-only-built-in-numeric-types"]], "Access": [[4, "access"]], "Construction": [[5, "construction"]], "Material State": [[6, "material-state"]], "Prelude": [[7, "prelude"]], "Typing": [[9, "typing"]], "Matrices-Py": [[10, "matrices-py"]], "Getting Started": [[10, "getting-started"]], "Contributing": [[10, "contributing"]], "License": [[10, "license"]]}, "indexentries": {"complexmatrix (class in matrices.builtins)": [[0, "matrices.builtins.ComplexMatrix"]], "integermatrix (class in matrices.builtins)": [[0, "matrices.builtins.IntegerMatrix"]], "matrix (class in matrices.builtins)": [[0, "matrices.builtins.Matrix"]], "realmatrix (class in matrices.builtins)": [[0, "matrices.builtins.RealMatrix"]], "__abs__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__abs__"]], "__abs__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__abs__"]], "__add__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__add__"]], "__add__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__add__"]], "__add__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__add__"]], "__and__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__and__"]], "__contains__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__contains__"]], "__copy__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__copy__"]], "__deepcopy__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__deepcopy__"]], "__divmod__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__divmod__"]], "__divmod__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__divmod__"]], "__eq__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__eq__"]], "__floordiv__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__floordiv__"]], "__floordiv__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__floordiv__"]], "__ge__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__ge__"]], "__getitem__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__getitem__"]], "__getitem__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__getitem__"]], "__getitem__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__getitem__"]], "__getitem__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__getitem__"]], "__gt__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__gt__"]], "__hash__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__hash__"]], "__init__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__init__"]], "__invert__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__invert__"]], "__iter__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__iter__"]], "__le__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__le__"]], "__lshift__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__lshift__"]], "__lt__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__lt__"]], "__matmul__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__matmul__"]], "__matmul__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__matmul__"]], "__matmul__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__matmul__"]], "__mod__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__mod__"]], "__mod__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__mod__"]], "__mul__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__mul__"]], "__mul__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__mul__"]], "__mul__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__mul__"]], "__neg__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__neg__"]], "__neg__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__neg__"]], "__neg__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__neg__"]], "__or__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__or__"]], "__pos__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__pos__"]], "__pos__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__pos__"]], "__pos__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__pos__"]], "__radd__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__radd__"]], "__radd__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__radd__"]], "__radd__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__radd__"]], "__rand__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rand__"]], "__rdivmod__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rdivmod__"]], "__rdivmod__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__rdivmod__"]], "__repr__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__repr__"]], "__reversed__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__reversed__"]], "__rfloordiv__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rfloordiv__"]], "__rfloordiv__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__rfloordiv__"]], "__rlshift__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rlshift__"]], "__rmod__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rmod__"]], "__rmod__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__rmod__"]], "__rmul__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__rmul__"]], "__rmul__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rmul__"]], "__rmul__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__rmul__"]], "__ror__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__ror__"]], "__rrshift__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rrshift__"]], "__rshift__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rshift__"]], "__rsub__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__rsub__"]], "__rsub__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rsub__"]], "__rsub__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__rsub__"]], "__rtruediv__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__rtruediv__"]], "__rtruediv__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__rtruediv__"]], "__rxor__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__rxor__"]], "__str__() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.__str__"]], "__sub__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__sub__"]], "__sub__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__sub__"]], "__sub__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__sub__"]], "__truediv__() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.__truediv__"]], "__truediv__() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.__truediv__"]], "__xor__() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.__xor__"]], "array (matrices.builtins.matrix property)": [[0, "matrices.builtins.Matrix.array"]], "compare() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.compare"]], "conjugate() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.conjugate"]], "conjugate() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.conjugate"]], "conjugate() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.conjugate"]], "count() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.count"]], "equal() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.equal"]], "flip() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.flip"]], "flip() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.flip"]], "flip() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.flip"]], "flip() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.flip"]], "format() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.format"]], "from_nesting() (matrices.builtins.matrix class method)": [[0, "matrices.builtins.Matrix.from_nesting"]], "greater() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.greater"]], "greater_equal() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.greater_equal"]], "index() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.index"]], "lesser() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.lesser"]], "lesser_equal() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.lesser_equal"]], "materialize() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.materialize"]], "materialize() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.materialize"]], "materialize() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.materialize"]], "materialize() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.materialize"]], "matrices.builtins": [[0, "module-matrices.builtins"]], "module": [[0, "module-matrices.builtins"], [1, "module-matrices.rule"]], "n() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.n"]], "ncols (matrices.builtins.matrix property)": [[0, "matrices.builtins.Matrix.ncols"]], "not_equal() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.not_equal"]], "nrows (matrices.builtins.matrix property)": [[0, "matrices.builtins.Matrix.nrows"]], "reverse() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.reverse"]], "reverse() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.reverse"]], "reverse() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.reverse"]], "reverse() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.reverse"]], "rotate() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.rotate"]], "rotate() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.rotate"]], "rotate() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.rotate"]], "rotate() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.rotate"]], "shape (matrices.builtins.matrix property)": [[0, "matrices.builtins.Matrix.shape"]], "slices() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.slices"]], "slices() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.slices"]], "slices() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.slices"]], "slices() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.slices"]], "transjugate() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.transjugate"]], "transjugate() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.transjugate"]], "transjugate() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.transjugate"]], "transpose() (matrices.builtins.complexmatrix method)": [[0, "matrices.builtins.ComplexMatrix.transpose"]], "transpose() (matrices.builtins.integermatrix method)": [[0, "matrices.builtins.IntegerMatrix.transpose"]], "transpose() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.transpose"]], "transpose() (matrices.builtins.realmatrix method)": [[0, "matrices.builtins.RealMatrix.transpose"]], "values() (matrices.builtins.matrix method)": [[0, "matrices.builtins.Matrix.values"]], "col (in module matrices.rule)": [[1, "matrices.rule.COL"]], "col (matrices.rule.rule attribute)": [[1, "matrices.rule.Rule.COL"]], "row (in module matrices.rule)": [[1, "matrices.rule.ROW"]], "row (matrices.rule.rule attribute)": [[1, "matrices.rule.Rule.ROW"]], "rule (class in matrices.rule)": [[1, "matrices.rule.Rule"]], "__invert__() (matrices.rule.rule method)": [[1, "matrices.rule.Rule.__invert__"]], "handle (matrices.rule.rule property)": [[1, "matrices.rule.Rule.handle"]], "matrices.rule": [[1, "module-matrices.rule"]]}})